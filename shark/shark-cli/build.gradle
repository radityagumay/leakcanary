import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

plugins {
  id("org.jetbrains.kotlin.jvm")
  id("application")
  id("com.vanniktech.maven.publish")
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// Workaround for https://stackoverflow.com/questions/48988778
// /cannot-inline-bytecode-built-with-jvm-target-1-8-into-bytecode-that-is-being-bui
tasks.withType(KotlinCompile).configureEach {
  kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8.toString()
}

jar {
  manifest {
    attributes "Main-Class": "shark.MainKt"
  }

  // super strange issue where we need to excludes these meta
  // otherwise it would lead to load shark.MainKt is not found
  // see https://stackoverflow.com/a/56242000
  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'

  configurations.implementation.setCanBeResolved(true)
  // to be use to exclude META-INF/*
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

  // This line of code recursively collects and copies all of a project's files
  // and adds them to the JAR itself. One can extend this task, to skip certain
  // files or particular types at will
  from {
    configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

dependencies {
  api projects.shark.sharkAndroid

  implementation libs.clikt
  implementation libs.neo4j
  implementation libs.jline
  implementation libs.kotlin.stdlib
}

application {
  mainClassName = "shark.MainKt"
}

def generatedVersionDir = "${buildDir}/generated-version"

sourceSets {
  main {
    output.dir(generatedVersionDir, builtBy: 'generateVersionProperties')
  }
}

tasks.register("generateVersionProperties") {
  doLast {
    def propertiesFile = file "$generatedVersionDir/version.properties"
    propertiesFile.parentFile.mkdirs()
    def properties = new Properties()
    properties.setProperty("version_name", rootProject.VERSION_NAME.toString())
    propertiesFile.withWriter { properties.store(it, null) }
  }
}
tasks.named("processResources") {
  dependsOn("generateVersionProperties")
}

